"use strict";(self.webpackChunkmirrorx_cloud=self.webpackChunkmirrorx_cloud||[]).push([[671],{2769:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var a=r(6687);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(r),k=i,d=m["".concat(p,".").concat(k)]||m[k]||c[k]||o;return r?a.createElement(d,n(n({ref:t},u),{},{components:r})):a.createElement(d,n({ref:t},u))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,n=new Array(o);n[0]=k;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:i,n[1]=l;for(var s=2;s<o;s++)n[s]=r[s];return a.createElement.apply(null,n)}return a.createElement.apply(null,r)}k.displayName="MDXCreateElement"},6691:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>n,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=r(7375),i=(r(6687),r(2769));const o={sidebar_position:1},n="Tutorial",l={unversionedId:"intro",id:"intro",title:"Tutorial",description:"MirrorX is a remote desktop control tool powered by Rust. With fully open-source client and server, native E2EE support, users can build SECURITY and FAST remote control network, which is fully under control of users.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar"},p={},s=[{value:"Component",id:"component",level:2},{value:"Free Public Servers",id:"free-public-servers",level:2},{value:"Available Platform",id:"available-platform",level:2},{value:"How to build",id:"how-to-build",level:2},{value:"Prerequisite",id:"prerequisite",level:3},{value:"Steps",id:"steps",level:3},{value:"About Pre Built Media Libraries",id:"about-pre-built-media-libraries",level:2},{value:"Thanks",id:"thanks",level:2},{value:"Thanks these awesome open source projects that make MirrorX becomes true.",id:"thanks-these-awesome-open-source-projects-that-make-mirrorx-becomes-true",level:3}],u={toc:s};function m(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"tutorial"},"Tutorial"),(0,i.kt)("p",null,"MirrorX is a remote desktop control tool powered by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/rust-lang/rust"},"Rust"),". With fully open-source client and server, native E2EE support, users can build SECURITY and FAST remote control network, which is fully under control of users."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"MirrorX is on the early stage with active developing now. Please forgive us that we cannot make any backward compatibility commitments at this time."))),(0,i.kt)("h2",{id:"component"},"Component"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/MirrorX-Desktop/MirrorX"},"MirrorX Client")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/MirrorX-Desktop/signaling"},"MirrorX Signaling Server")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/MirrorX-Desktop/endpoints"},"MirrorX Endpoints Server"))),(0,i.kt)("h2",{id:"free-public-servers"},"Free Public Servers"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This server is support at my own expense, so please do not abuse it.")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Location"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Specification"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Seoul"),(0,i.kt)("td",{parentName:"tr",align:"center"},"1vCPU & 1G RAM")))),(0,i.kt)("h2",{id:"available-platform"},"Available Platform"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","macOS"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","Windows"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Linux (WIP)"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Android (WIP)"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","iOS (WIP)"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Web (WIP)")),(0,i.kt)("h2",{id:"how-to-build"},"How to build"),(0,i.kt)("h3",{id:"prerequisite"},"Prerequisite"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Install ",(0,i.kt)("inlineCode",{parentName:"li"},"nodejs && npm && yarn"),"."),(0,i.kt)("li",{parentName:"ol"},"Path for ",(0,i.kt)("inlineCode",{parentName:"li"},"ProtoBuf Compiler (protoc)")," added to PATH."),(0,i.kt)("li",{parentName:"ol"},"Install ",(0,i.kt)("inlineCode",{parentName:"li"},"tauri-cli"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"cargo install tauri-cli\n")),(0,i.kt)("h3",{id:"steps"},"Steps"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Download pre built media libraries artifacts from ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/MirrorX-Desktop/media_libraries_auto_build"},"MirrorX-Desktop/media_libraries_auto_build")," Release.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Unzip artifacts to anywhere you'd like to put in.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Add unzipped artifacts path to your Environment Variables")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For MacOS"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ export MIRRORX_MEDIA_LIBS_PATH=your artifacts unzip destination path\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For Windows ",(0,i.kt)("strong",{parentName:"p"},"(run As Administrator)")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-PowerShell"},"PS > [Environment]::SetEnvironmentVariable('MIRRORX_MEDIA_LIBS_PATH', 'your artifacts unzip destination path' , 'Machine')\n"))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run as Debug Mode"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"cargo tauri dev\n")),(0,i.kt)("h2",{id:"about-pre-built-media-libraries"},"About Pre Built Media Libraries"),(0,i.kt)("p",null,"To speed up the build process, we made ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/MirrorX-Desktop/media_libraries_auto_build"},"MirrorX-Desktop/media_libraries_auto_build")," to automatically and transparently build external libraries. Includes ",(0,i.kt)("a",{parentName:"p",href:"https://git.ffmpeg.org/ffmpeg.git"},"FFmpeg"),", libx264(",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ShiftMediaProject/x264.git"},"Windows"),", ",(0,i.kt)("a",{parentName:"p",href:"https://code.videolan.org/videolan/x264.git"},"MacOS"),"), libx265(",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ShiftMediaProject/x265.git"},"Windows"),", ",(0,i.kt)("a",{parentName:"p",href:"https://bitbucket.org/multicoreware/x265_git.git"},"MacOS"),"), libopus(",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ShiftMediaProject/opus.git"},"Windows"),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/xiph/opus.git"},"MacOS"),") and MFXDispatch(",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ShiftMediaProject/mfx_dispatch.git"},"Windows")," only). For more details, you can look through ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/MirrorX-Desktop/media_libraries_auto_build/tree/main/.github/workflows"},"Workflows")," on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/MirrorX-Desktop/media_libraries_auto_build"},"MirrorX-Desktop/media_libraries_auto_build"),"."),(0,i.kt)("p",null,"Of course, you can completely built those libraries by yourself according to our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/MirrorX-Desktop/media_libraries_auto_build/tree/main/.github/workflows"},"Workflows"),"."),(0,i.kt)("h2",{id:"thanks"},"Thanks"),(0,i.kt)("h3",{id:"thanks-these-awesome-open-source-projects-that-make-mirrorx-becomes-true"},"Thanks these awesome open source projects that make MirrorX becomes true."),(0,i.kt)("p",null,"(listed partial with in no particular order, thanks all the authors of dependencies in Cargo.toml and package.json)"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/rust-lang/rust"},"Rust")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/tokio-rs/tokio"},"Tokio")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://ffmpeg.org"},"FFMPEG")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/serde-rs/serde"},"serde")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/briansmith/ring"},"ring")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/emilk/egui"},"egui")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/microsoft/windows-rs"},"windows-rs")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/sveltejs/kit"},"sveltekit")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/saadeghi/daisyui"},"daisyUI")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/tailwindlabs/tailwindcss"},"tailwindcss")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ShiftMediaProject"},"ShiftMediaProject"))))}m.isMDXComponent=!0}}]);